name: CI

on:
  pull_request:
    branches: ['main']

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #         cache: yarn

  #     - name: Install dependencies
  #       run: yarn install

  #     - name: Build
  #       run: yarn build

  #     - name: Close PR, if build fails
  #       if: ${{ failure() }}
  #       # 이전 step이 실패한 경우에만 이 step을 실행시키는 syntax
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{ github.TOKEN }}
  #         script: |
  #           const pull_number = ${{ github.event.pull_request.number }}
  #           const updated_title = `[BUILD FAIL] ${{ github.event.pull_request.title }}`
  #           await github.rest.pulls.createReview({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             pull_number: pull_number,
  #             body: '빌드에 실패했습니다.',
  #             event: 'REQUEST_CHANGES'
  #           })
  #           await github.rest.pulls.update({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             pull_number: pull_number,
  #             title: updated_title,
  #             state: 'closed'
  #           })

  test:
    runs-on: ubuntu-latest
    # needs: build

    env:
      REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
      REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Run test
        run: yarn test

      - name: Close PR, If test fail
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.TOKEN }}
          script: |
            const pull_number = ${{ github.event.pull_request.number }}
            const updated_title = `[TEST FAIL] ${{ github.event.pull_request.title }}`
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '테스트에 실패했습니다.',
              event: 'REQUEST_CHANGES'
            })
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              title: updated_title,
              state: 'closed'
            })

      - name: Approve PR, If test passes
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.TOKEN }}
          script: |
            const pull_number = ${{ github.event.pull_request.number }}
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '테스트에 통과해 main 브랜치로 자동 머지합니다.',
              event: 'REQUEST_CHANGES'
            })
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
            })
